---
title: Back up your Notion workspaces to Amazon S3 buckets
description: Learn how you can back up your Notion workspaces to Amazon S3 buckets
---

<% content_for :head do %>
  <script type="application/ld+json">
  {
    "@context": "https://schema.org/",
    "@type": "TechArticle",
    "headline": "<%= @item[:title] %>",
    "datePublished": "2022-11-02",
    "dateModified": "2022-12-11",
    "description": "<%= @item[:description] %>",
    "inLanguage": "en-US",
    "image": {
      "@type": "ImageObject",
      "url": "https://notionbackups.com/assets/images/banner.png"
    },
    "copyrightHolder": {
      "@type": "Organization",
      "name": "Notion Backups"
    },
    "publisher": {
      "@type": "Organization",
      "name": "Notion Backups"
    }
  }
  </script>
<% end %>

<article class="px-4 mt-24 mb-12 sm:px-6 lg:px-8">
<div class="max-w-prose mx-auto">

  <h1 class="mt-2 text-center tracking-tight">
    Setting up Amazon S3
  </h1>

  <p class="mt-8">You need to connect to at least one of the available cloud storage providers to get your workspace backed up.</p>

  <p class="mt-8">To let Notion Backups connect to your S3 bucket, attach the <em>AmazonS3FullAccess</em> policy to your IAM user. It's better to create a new user with only this policy attached to keep your AWS account secure.</p>

  <p class="mt-8">To create a new IAM user from your AWS Dashboard:</p>

  <ol class="mt-8 text-xl text-gray-700 leading-8">
     <li>Visit the <a href="https://console.aws.amazon.com/iamv2/home?#/users" class="underline" target="_blank" rel="noopener">Users page</a> in your IAM dashboard</li>
     <li>Come up with a user name and select the "Access key" option as a credential type <img loading="lazy" class="block my-4 rounded-md shadow" src="/assets/images/add-iam-user-aws.png" alt="Creating a new user in the AWS IAM"></li>
     <li>Select the "Attach existing policies directly" tab and search for the "AmazonS3FullAccess" policy<img loading="lazy" class="block my-4 rounded-md shadow" src="/assets/images/amazon-s3-policy-iam.png" alt="Attaching a policy to the IAM user"></li>
     <li>After creating a user, you can use the newly-generated Access Key ID and Secret Access Key in Notion Backups <img loading="lazy" class="block my-4 rounded-md shadow" src="/assets/images/final-iam-screen.png" alt="Final screen summarizing IAM user's attributes"></li>
  </ol>

  <p class="mt-8">This new IAM user will have access to all S3 buckets. To restrict access to a specific bucket, use the IAM policy below.</p>

  <h2 class="my-8" id="iam-policy">IAM policy</h2>

  <p class="mt-8">If you're creating an IAM user programmatically, you can use the following policy to limit access to a specific bucket (replace <code>yourbucket</code> with your bucket's name):</p>

  <pre><code>
{
    "Version": "2012-10-17",
    "Statement": [{
        "Sid": "GrantFullAccessToThisS3Bucket",
        "Effect": "Allow",
        "Action": ["s3:*"],
        "Resource": [
            "arn:aws:s3:::<em>yourbucket</em>",
            "arn:aws:s3:::<em>yourbucket</em>/*"
        ]
    }]
}</code></pre>

  <h3 class="my-8">Terraform</h2>

  <p class="mt-8">If you're using <a href="https://www.terraform.io" target="_blank" rel="noopener" class="underline">Terraform</a> to control your AWS infrastructure, you can use the following script to create an IAM policy:</p>

  <pre><code>
resource "aws_iam_policy" "notion_backups" {
  name = "notion_backups"
  description = "Create an IAM policy to control the S3 bucket."

  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [{
      Sid = "GrantFullAccessToThisS3Bucket"
      Effect = "Allow"
      Action = ["s3:*"]
      Resource = [
        aws_s3_bucket.notion_backups.arn,
        "${aws_s3_bucket.notion_backups.arn}/*"
      ]
    }]
  })
}</code></pre>

<p class="mt-8">If you have questions about anything, feel free to <a href="mailto:support@notionbackups.com" class="underline">reach out</a>.</p>

</div>
</article>
